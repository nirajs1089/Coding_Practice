


# Problem 12
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

#find the factors of a numbers
import math as maths


def findFactors(n):

    divisor = 1
    factors = []

    while divisor <= maths.floor((int(n)/2)):
        if n % divisor == 0 and divisor not in factors:
            factors.append(divisor)
        divisor = divisor + 1

    factors.append(n)

    return len(factors)

sum = 0
loop = 1
cnt = 0
while cnt < 500:
    sum += loop
    loop += 1
    cnt = findFactors(sum)
    print(sum,cnt,sep='\t')

# print(findFactors(20))

print(sum)







